{"version":3,"sources":["components/feedback/StyledFeedback.js","components/feedback/FeedbackOptions.js","components/section/StyledSection.js","components/section/Section.js","components/statistic/StyledStatistics.js","components/statistic/Statistics.js","components/notification/Notification.js","components/feedbackStatistic/styledFeedbackStatistic.js","components/feedbackStatistic/FeedbackStatistic.js","components/App.js","index.js"],"names":["WrapperFeedback","styled","div","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","className","onClick","type","name","toUpperCase","slice","SectionStyled","Section","title","children","WrapperStatistic","Statistics","props","total","positivePercentage","Notification","message","WrapperFeedbackStatistic","FeedbackStatistic","state","good","bad","neutral","handleIncreament","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"ipBAEA,IAkBeA,EAlBSC,IAAOC,IAAV,KCyBNC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,UACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBACEC,UAAU,eACVC,QAASN,EACTO,KAAK,SAELC,KAAMJ,EALR,SAOGA,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IAH/BN,S,2MCVf,IAUeO,EAVOf,IAAOC,IAAV,KCgBJe,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIT,UAAU,gBAAd,SAA+BQ,IAC9BC,M,sNCNP,IAYeC,EAZUnB,IAAOC,IAAV,KCuBPmB,EArBI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAClC,OACE,eAAC,EAAD,WACGlB,OAAOC,KAAKe,GAAOd,KAAI,SAAAC,GAAI,OAC1B,oBAAGC,UAAU,OAAb,UACGD,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,GADtC,KAEE,sBAAML,UAAU,aAAhB,SAA8BY,EAAMb,OAFbA,MAK3B,oBAAGC,UAAU,OAAb,oBAA4Ba,OAC5B,oBAAGb,UAAU,OAAb,gCAAwCc,IAAxC,WCJSC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,8QCFb,IAUeC,EAVkB1B,IAAOC,IAAV,KCiDf0B,E,4MA3CbC,MAAQ,CACNC,KAAM,EACNC,IAAK,EACLC,QAAS,G,EAEXC,iBAAmB,SAAAC,GAAU,IACnBrB,EAASqB,EAAMC,OAAftB,KACR,EAAKuB,UAAS,SAAAC,GAAS,sBACpBxB,EAAOwB,EAAUxB,GAAQ,O,EAG9ByB,mBAAqB,WACnB,OAAO,EAAKT,MAAMC,KAAO,EAAKD,MAAME,IAAM,EAAKF,MAAMG,S,EAEvDO,gCAAkC,WAChC,OAAQ,EAAKV,MAAMC,KAAO,EAAKQ,qBAAwB,K,uDAIvD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,QAASoC,KAAKX,MACdxB,gBAAiBmC,KAAKP,qBAG1B,cAAC,EAAD,CAASf,MAAM,aAAf,SACGsB,KAAKF,qBACJ,cAAC,EAAD,CACEhB,MAAOkB,KAAKX,MACZN,MAAOiB,KAAKF,mBACZd,mBAAoBgB,KAAKD,kCAG3B,cAAC,EAAD,CAAcb,QAAQ,+B,GApCFe,aCAjBC,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7bf426c2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst WrapperFeedback = styled.div`\r\n  .feedback-btn {\r\n    font-weight: 700;\r\n    padding: 7px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .feedback-btn:hover,\r\n  .feedback-btn:focus {\r\n    background-color: yellow;\r\n  }\r\n  .feedback-btn:not(:last-child) {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n\r\nexport default WrapperFeedback;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WrapperFeedback from './StyledFeedback';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <WrapperFeedback>\r\n      {Object.keys(options).map(item => (\r\n        <button\r\n          className=\"feedback-btn\"\r\n          onClick={onLeaveFeedback}\r\n          type=\"button\"\r\n          key={item}\r\n          name={item}\r\n        >\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </button>\r\n      ))}\r\n    </WrapperFeedback>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from 'styled-components';\r\n\r\nconst SectionStyled = styled.div`\r\n  padding: 30px 10px;\r\n  margin: 0 auto;\r\n  width: 350px;\r\n  .section-title {\r\n    font-size: 30px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport default SectionStyled;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionStyled from './StyledSection';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"section-title\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\n\r\nconst WrapperStatistic = styled.div`\r\n  .stat {\r\n    font-weight: 500;\r\n  }\r\n  .stat:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .statNumber {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport default WrapperStatistic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WrapperStatistic from './StyledStatistics';\r\n\r\nconst Statistics = ({ props, total, positivePercentage }) => {\r\n  return (\r\n    <WrapperStatistic>\r\n      {Object.keys(props).map(item => (\r\n        <p className=\"stat\" key={item}>\r\n          {item[0].toUpperCase() + item.slice(1)} :\r\n          <span className=\"statNumber\">{props[item]}</span>\r\n        </p>\r\n      ))}\r\n      <p className=\"stat\">Total: {total()}</p>\r\n      <p className=\"stat\">Positive feedback: {positivePercentage()}%</p>\r\n    </WrapperStatistic>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  props: PropTypes.object.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import styled from 'styled-components';\r\n\r\nconst WrapperFeedbackStatistic = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: max-content;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n`;\r\n\r\nexport default WrapperFeedbackStatistic;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from '../feedback/FeedbackOptions';\r\nimport Section from '../section/Section';\r\nimport Statistics from '../statistic/Statistics';\r\nimport Notification from '../notification/Notification';\r\nimport WrapperFeedbackStatistic from './styledFeedbackStatistic';\r\n\r\nclass FeedbackStatistic extends Component {\r\n  state = {\r\n    good: 0,\r\n    bad: 0,\r\n    neutral: 0,\r\n  };\r\n  handleIncreament = event => {\r\n    const { name } = event.target;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.bad + this.state.neutral;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return (this.state.good / this.countTotalFeedback()) * 100;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <WrapperFeedbackStatistic>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleIncreament}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              props={this.state}\r\n              total={this.countTotalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </WrapperFeedbackStatistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackStatistic;\r\n","import React from 'react';\r\nimport FeedbackStatistic from './feedbackStatistic/FeedbackStatistic';\r\n\r\nconst App = () => {\r\n  return <FeedbackStatistic />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}